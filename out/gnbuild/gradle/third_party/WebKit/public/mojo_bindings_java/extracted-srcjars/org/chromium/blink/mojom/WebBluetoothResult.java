
// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file is autogenerated by:
//     mojo/public/tools/bindings/mojom_bindings_generator.py
// For:
//     third_party/WebKit/public/platform/modules/bluetooth/web_bluetooth.mojom
//

package org.chromium.blink.mojom;

import org.chromium.base.annotations.SuppressFBWarnings;
import org.chromium.mojo.bindings.DeserializationException;

public final class WebBluetoothResult {


    public static final int SUCCESS = 0;

    public static final int GATT_INVALID_ATTRIBUTE_LENGTH = SUCCESS + 1;

    public static final int SERVICE_NO_LONGER_EXISTS = GATT_INVALID_ATTRIBUTE_LENGTH + 1;

    public static final int CHARACTERISTIC_NO_LONGER_EXISTS = SERVICE_NO_LONGER_EXISTS + 1;

    public static final int CONNECT_ALREADY_IN_PROGRESS = CHARACTERISTIC_NO_LONGER_EXISTS + 1;

    public static final int CONNECT_ATTRIBUTE_LENGTH_INVALID = CONNECT_ALREADY_IN_PROGRESS + 1;

    public static final int CONNECT_AUTH_CANCELED = CONNECT_ATTRIBUTE_LENGTH_INVALID + 1;

    public static final int CONNECT_AUTH_FAILED = CONNECT_AUTH_CANCELED + 1;

    public static final int CONNECT_AUTH_REJECTED = CONNECT_AUTH_FAILED + 1;

    public static final int CONNECT_AUTH_TIMEOUT = CONNECT_AUTH_REJECTED + 1;

    public static final int CONNECT_CONNECTION_CONGESTED = CONNECT_AUTH_TIMEOUT + 1;

    public static final int CONNECT_INSUFFICIENT_ENCRYPTION = CONNECT_CONNECTION_CONGESTED + 1;

    public static final int CONNECT_OFFSET_INVALID = CONNECT_INSUFFICIENT_ENCRYPTION + 1;

    public static final int CONNECT_READ_NOT_PERMITTED = CONNECT_OFFSET_INVALID + 1;

    public static final int CONNECT_REQUEST_NOT_SUPPORTED = CONNECT_READ_NOT_PERMITTED + 1;

    public static final int CONNECT_UNKNOWN_ERROR = CONNECT_REQUEST_NOT_SUPPORTED + 1;

    public static final int CONNECT_UNKNOWN_FAILURE = CONNECT_UNKNOWN_ERROR + 1;

    public static final int CONNECT_UNSUPPORTED_DEVICE = CONNECT_UNKNOWN_FAILURE + 1;

    public static final int CONNECT_WRITE_NOT_PERMITTED = CONNECT_UNSUPPORTED_DEVICE + 1;

    public static final int DEVICE_NO_LONGER_IN_RANGE = CONNECT_WRITE_NOT_PERMITTED + 1;

    public static final int GATT_NOT_PAIRED = DEVICE_NO_LONGER_IN_RANGE + 1;

    public static final int GATT_OPERATION_IN_PROGRESS = GATT_NOT_PAIRED + 1;

    public static final int UNTRANSLATED_CONNECT_ERROR_CODE = GATT_OPERATION_IN_PROGRESS + 1;

    public static final int NO_BLUETOOTH_ADAPTER = UNTRANSLATED_CONNECT_ERROR_CODE + 1;

    public static final int CHOSEN_DEVICE_VANISHED = NO_BLUETOOTH_ADAPTER + 1;

    public static final int CHOOSER_CANCELLED = CHOSEN_DEVICE_VANISHED + 1;

    public static final int CHOOSER_NOT_SHOWN_API_GLOBALLY_DISABLED = CHOOSER_CANCELLED + 1;

    public static final int CHOOSER_NOT_SHOWN_API_LOCALLY_DISABLED = CHOOSER_NOT_SHOWN_API_GLOBALLY_DISABLED + 1;

    public static final int CHOOSER_NOT_SHOWN_USER_DENIED_PERMISSION_TO_SCAN = CHOOSER_NOT_SHOWN_API_LOCALLY_DISABLED + 1;

    public static final int SERVICE_NOT_FOUND = CHOOSER_NOT_SHOWN_USER_DENIED_PERMISSION_TO_SCAN + 1;

    public static final int NO_SERVICES_FOUND = SERVICE_NOT_FOUND + 1;

    public static final int CHARACTERISTIC_NOT_FOUND = NO_SERVICES_FOUND + 1;

    public static final int NO_CHARACTERISTICS_FOUND = CHARACTERISTIC_NOT_FOUND + 1;

    public static final int DESCRIPTOR_NOT_FOUND = NO_CHARACTERISTICS_FOUND + 1;

    public static final int NO_DESCRIPTORS_FOUND = DESCRIPTOR_NOT_FOUND + 1;

    public static final int WEB_BLUETOOTH_NOT_SUPPORTED = NO_DESCRIPTORS_FOUND + 1;

    public static final int BLUETOOTH_LOW_ENERGY_NOT_AVAILABLE = WEB_BLUETOOTH_NOT_SUPPORTED + 1;

    public static final int GATT_UNKNOWN_ERROR = BLUETOOTH_LOW_ENERGY_NOT_AVAILABLE + 1;

    public static final int GATT_UNKNOWN_FAILURE = GATT_UNKNOWN_ERROR + 1;

    public static final int GATT_NOT_PERMITTED = GATT_UNKNOWN_FAILURE + 1;

    public static final int GATT_NOT_SUPPORTED = GATT_NOT_PERMITTED + 1;

    public static final int GATT_UNTRANSLATED_ERROR_CODE = GATT_NOT_SUPPORTED + 1;

    public static final int GATT_NOT_AUTHORIZED = GATT_UNTRANSLATED_ERROR_CODE + 1;

    public static final int BLOCKLISTED_DESCRIPTOR_UUID = GATT_NOT_AUTHORIZED + 1;

    public static final int BLOCKLISTED_CHARACTERISTIC_UUID = BLOCKLISTED_DESCRIPTOR_UUID + 1;

    public static final int BLOCKLISTED_READ = BLOCKLISTED_CHARACTERISTIC_UUID + 1;

    public static final int BLOCKLISTED_WRITE = BLOCKLISTED_READ + 1;

    public static final int NOT_ALLOWED_TO_ACCESS_ANY_SERVICE = BLOCKLISTED_WRITE + 1;

    public static final int NOT_ALLOWED_TO_ACCESS_SERVICE = NOT_ALLOWED_TO_ACCESS_ANY_SERVICE + 1;

    public static final int REQUEST_DEVICE_WITH_BLOCKLISTED_UUID = NOT_ALLOWED_TO_ACCESS_SERVICE + 1;

    public static final int REQUEST_DEVICE_FROM_CROSS_ORIGIN_IFRAME = REQUEST_DEVICE_WITH_BLOCKLISTED_UUID + 1;

    public static final int REQUEST_DEVICE_WITHOUT_FRAME = REQUEST_DEVICE_FROM_CROSS_ORIGIN_IFRAME + 1;

    public static final int DESCRIPTOR_NO_LONGER_EXISTS = REQUEST_DEVICE_WITHOUT_FRAME + 1;


    private static final boolean IS_EXTENSIBLE = false;

    public static boolean isKnownValue(int value) {
        switch (value) {
            case 0:
            case 1:
            case 2:
            case 3:
            case 4:
            case 5:
            case 6:
            case 7:
            case 8:
            case 9:
            case 10:
            case 11:
            case 12:
            case 13:
            case 14:
            case 15:
            case 16:
            case 17:
            case 18:
            case 19:
            case 20:
            case 21:
            case 22:
            case 23:
            case 24:
            case 25:
            case 26:
            case 27:
            case 28:
            case 29:
            case 30:
            case 31:
            case 32:
            case 33:
            case 34:
            case 35:
            case 36:
            case 37:
            case 38:
            case 39:
            case 40:
            case 41:
            case 42:
            case 43:
            case 44:
            case 45:
            case 46:
            case 47:
            case 48:
            case 49:
            case 50:
            case 51:
            case 52:
                return true;
        }
        return false;
    }

    public static void validate(int value) {
        if (IS_EXTENSIBLE || isKnownValue(value))
            return;

        throw new DeserializationException("Invalid enum value.");
    }

    private WebBluetoothResult() {}

}